{"version":3,"sources":["actions/books.js","actions/cart.js","components/Menu.jsx","containers/Menu.js","components/BookCard.jsx","containers/BookCard.js","actions/filter.js","components/Filter.jsx","containers/Filter.js","components/App.jsx","containers/App.js","reducers/books.js","reducers/cart.js","reducers/filter.js","reducers/index.js","index.js","store.js"],"names":["setBooks","books","type","payload","addToCard","obj","removeFromCard","id","CartComponent","title","image","List","selection","divided","verticalAlign","Item","Content","floated","Button","color","onClick","bind","Image","avatar","src","MenuComponent","totalPrice","count","items","Menu","name","position","Popup","trigger","content","map","book","on","hideOnScroll","connect","cart","reduce","total","price","length","uniqBy","o","dispatch","bindActionCreators","cartActions","BookCard","author","addedCount","Card","wrapped","ui","Header","Meta","className","extra","Icon","filterActions","setFilter","filter","setSearchQuery","value","Filter","filterBy","searchQuery","secondary","active","Input","onChange","e","target","icon","placeholder","App","this","props","axios","get","then","data","isReady","Container","Group","itemsPerRow","i","key","Component","searchBooks","filtrBy","orderBy","sortBy","toLocaleLowerCase","indexOf","toLowerCase","filterBooks","booksActions","initialState","combineReducers","state","action","store","createStore","rootReducer","applyMiddleware","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88344a7a.chunk.js","sourcesContent":["export const setBooks = (books) => ({\r\n    type: 'SET_BOOKS',\r\n    payload: books\r\n});","export const addToCard = obj => ({\r\n    type: 'ADD_TO_CART',\r\n    payload: obj\r\n});\r\n\r\nexport const removeFromCard = id => ({\r\n    type: \"REMOVE_FROM_CART\",\r\n    payload: id\r\n})","import React from 'react';\r\nimport { Menu, Popup, List, Button, Image} from 'semantic-ui-react'\r\n\r\nconst CartComponent = ({title, id, image, removeFromCard}) => (\r\n    <List selection divided verticalAlign='middle'>\r\n        <List.Item>\r\n            <List.Content floated='right'>\r\n                <Button color=\"red\" onClick={removeFromCard.bind(this, id)}>Удалить</Button>\r\n            </List.Content>\r\n            <Image avatar src={image} />\r\n            <List.Content>{title}</List.Content>\r\n        </List.Item>\r\n    </List>\r\n)\r\n\r\nconst MenuComponent = ({totalPrice, count, items}) => (\r\n    <Menu>\r\n        <Menu.Item\r\n            name='browse'\r\n        >\r\n           Меню книг\r\n        </Menu.Item>\r\n\r\n        <Menu.Menu position='right'>\r\n            <Menu.Item\r\n                name='signup'\r\n            >\r\n                Итого: &nbsp; <b>{totalPrice}</b> руб.\r\n            </Menu.Item>\r\n            <Popup\r\n                trigger = {\r\n                    <Menu.Item\r\n                        name='help'\r\n                    >\r\n                        Корзина (<b>{count}</b>) руб\r\n                    </Menu.Item>\r\n                }\r\n                content={items.map(book => <CartComponent {...book} />)}\r\n                on=\"click\"\r\n                hideOnScroll\r\n            />\r\n        </Menu.Menu>\r\n    </Menu>\r\n)\r\n\r\nexport default MenuComponent","import {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as cartActions  from '../actions/cart';\r\nimport Menu from '../components/Menu';\r\nimport uniqBy from 'lodash/uniqBy';\r\n\r\nconst mapStateToProps = ({cart}) => ({\r\n    totalPrice: cart.items.reduce((total, book) => total + book.price, 0), //нативный метод прибав. к 0\r\n    count: cart.items.length,\r\n    items: uniqBy(cart.items, o => o.id)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators(cartActions, dispatch)\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","import React from 'react';\r\nimport { Card, Icon, Image, Button } from 'semantic-ui-react';\r\n\r\nconst BookCard = book => {\r\n    const {title, author, price, image, addToCard, addedCount} = book;\r\n    return (\r\n        <Card>\r\n            <Image src={image} wrapped ui={false} />\r\n            <Card.Content>\r\n                <Card.Header>{title}</Card.Header>\r\n                <Card.Meta>\r\n                    <span className='date'>{author}</span>\r\n                </Card.Meta>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <a>\r\n                    <Icon name='rub' />\r\n                    {price}\r\n                </a>\r\n            </Card.Content>\r\n            <Button onClick={addToCard.bind(this, book)}>\r\n                Добавить в корзину {addedCount > 0 && `(${addedCount})`}\r\n            </Button>\r\n        </Card>\r\n    )\r\n};\r\n\r\nexport default BookCard","import {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as filterActions  from '../actions/cart';\r\nimport BookCard from '../components/BookCard';\r\n\r\nconst mapStateToProps = ({cart}, {id}) => ({\r\n    addedCount: cart.items.reduce(\r\n        (count, book) => count + (book.id === id ? 1 : 0),\r\n        0,\r\n    ),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators(filterActions, dispatch)\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookCard);","export const setFilter = filter => ({\r\n    type: 'SET_FILTER',\r\n    payload: filter\r\n})\r\n\r\nexport const setSearchQuery = value => ({\r\n    type: 'SET_QUERY',\r\n    payload: value\r\n})","import React from 'react';\r\nimport { Input, Menu } from 'semantic-ui-react';\r\nimport {setSearchQuery} from \"../actions/filter\";\r\n\r\nconst Filter = ( {setFilter, filterBy, searchQuery, setSearchQuery}) =>  (\r\n    <Menu secondary>\r\n        <Menu.Item\r\n            active={filterBy === 'all'}\r\n            onClick={setFilter.bind(this, 'all')}\r\n        >Все</Menu.Item>\r\n        <Menu.Item\r\n            active={filterBy === 'price_high'}\r\n            onClick={setFilter.bind(this, 'price_high')}\r\n        >Цена (дорогие)</Menu.Item>\r\n        <Menu.Item\r\n            active={filterBy === 'price_low'}\r\n            onClick={setFilter.bind(this, 'price_low')}\r\n        >Цена (дешевые)</Menu.Item>\r\n        <Menu.Item\r\n            active={filterBy === 'author'}\r\n            onClick={setFilter.bind(this, 'author')}\r\n        >Автор</Menu.Item>\r\n            <Menu.Item>\r\n                    <Input\r\n                        onChange={e => setSearchQuery(e.target.value)}\r\n                        value={searchQuery}\r\n                        icon=\"search\"\r\n                        placeholder=\"Введите запрос...\"/>\r\n            </Menu.Item>\r\n    </Menu>\r\n);\r\n\r\nexport default Filter","import {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as filterActions  from '../actions/filter';\r\nimport Filter from '../components/Filter';\r\n\r\nconst mapStateToProps = ({books, filter}) => ({\r\n    filterBy: filter.filterBy\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators(filterActions, dispatch)\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Menu from '../containers/Menu';\nimport BookCard from '../containers/BookCard';\nimport Filter from '../containers/Filter';\nimport {Container} from \"semantic-ui-react\";\nimport {Card} from 'semantic-ui-react';\n\nclass App extends Component {\n    componentWillMount() {\n        const {setBooks} = this.props;\n        axios.get('/books.json').then(({data}) => {\n            setBooks(data);\n        });\n    }\n\n    render() {\n        const {books, isReady} = this.props;\n        return (\n            <Container>\n                <Menu/>\n                <Filter />\n                <Card.Group itemsPerRow={4}>\n                    {!isReady\n                        ? 'Загрузка...'\n                        :  books.map((book, i) => (\n                            <BookCard key={i} {...book}/>\n                        ))\n                    }\n                </Card.Group>\n            </Container>\n\n        )\n    }\n}\n\nexport default App;\n","import {connect} from 'react-redux'; //императивный подход\r\nimport {bindActionCreators} from 'redux';\r\nimport * as booksActions from '../actions/books';\r\nimport App from \"../components/App\";\r\nimport orderBy from 'lodash/orderBy'; //декларативный подход\r\n\r\nconst sortBy = (books, filtrBy) => {\r\n    //return orderBy(books, 'price', 'asc');//desc-по убыванию asc-возрастание\r\n    switch (filtrBy) {\r\n        case 'price_high':\r\n            return orderBy(books, 'price', 'desc');\r\n        case 'price_low':\r\n            return orderBy(books, 'price', 'asc');\r\n        case 'author':\r\n            return orderBy(books, 'author', 'asc');\r\n        default:\r\n            return books\r\n    }\r\n}\r\n\r\nconst filterBooks = (books, searchQuery) =>\r\n    books.filter(\r\n        o =>\r\n            o.title.toLocaleLowerCase().indexOf(searchQuery.toLowerCase()) >= 0 ||\r\n            o.author.toLocaleLowerCase().indexOf(searchQuery.toLowerCase()) >= 0\r\n        );\r\n\r\nconst searchBooks = (books, filterBy, searchQuery) => {\r\n    return sortBy(filterBooks(books,searchQuery), filterBy);\r\n}\r\n\r\n\r\nconst mapStateToProps = ({books, filter}) => ({\r\n    books: books.items && searchBooks(books.items, filter.filterBy, filter.searchQuery),\r\n    isReady: books.isReady\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators(booksActions, dispatch),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)( App);\r\n\r\n","const  initialState = {\r\n    isReady: false,\r\n    items: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_BOOKS':\r\n            return {\r\n                ...state,\r\n                items: action.payload,\r\n                isReady: true\r\n            };\r\n        case 'SET_IS_READY':\r\n            return {\r\n                ...state,\r\n                isReady: action.payload\r\n            }\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n};","const  initialState = {\r\n    items: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TO_CART':\r\n            return {\r\n                ...state,\r\n                items: [\r\n                    ...state.items,\r\n                    action.payload\r\n                ]\r\n            };\r\n        case 'REMOVE_FROM_CART':\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(o => o.id != action.payload)\r\n            }\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n};","const  initialState = {\r\n    searchQuery: '',\r\n    filterBy: 'all'\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_QUERY':\r\n            return {\r\n                ...state,\r\n                searchQuery: action.payload\r\n            };\r\n        case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filterBy: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from 'redux';\r\n\r\nimport books from './books';\r\nimport cart from './cart';\r\nimport filter from './filter'\r\n\r\nexport default combineReducers({\r\n    books,\r\n    cart,\r\n    filter\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './containers/App';\nimport { Provider } from 'react-redux';\nimport createStore from './store';\nimport 'semantic-ui-css/semantic.min.css';\nimport './app.css';\n\nconst store = createStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nexport default () => {\r\n    const store = createStore(rootReducer, applyMiddleware(logger));\r\n    return store;\r\n};\r\n"],"sourceRoot":""}